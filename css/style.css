:root {
  --font-primary: "Ubuntu", system-ui, sans-serif;
  --font-secondary: "Ubuntu Mono", system-ui, sans-serif;
  --text: rgb(85, 77, 107);
  --accent: rgb(231, 212, 132);
}

body {
  font-family: var(--font-primary);
  color: var(--text);
  padding: 50px 40px;
  max-width: 1500px;
  margin: 0 auto;
}

input[type="checkbox"] {
  accent-color: var(--text);
  width: 20px;
  height: 20px;
  display: flex;
}

header {
  display: flex;
  gap: 20px;
  align-items: center;
  h1 {
    font-size: 2.5rem;
    font-family: var(--font-secondary);
    text-transform: lowercase;
  }
  svg {
    fill: var(--text);
    width: 60px;
    height: 60px;
  }
}

main {
  margin-top: 20px;
  display: flex;
  flex-direction: column;
  gap: 25px;
}

#book-table {
  display: grid;
  grid-template-columns: 3fr 3fr 1fr 1fr 1fr;
  thead, tbody, tr {
    display: contents;
  }
  td {
    padding: 15px 10px;
  }
  tr + tr td {
    border: 0 solid var(--accent);
    border-top-width: 2px;
  }
  /* header row */
  th {
    background-color: var(--accent);
    padding: 0 10px;
    margin-bottom: 10px;
    text-align: left;
    font-family: var(--font-secondary);
    text-transform: lowercase;
    font-size: 1.2rem;
    /* rounded corners on row */
    &:first-child {
      border-radius: 10px 0 0 10px;
    }
    &:last-child {
      border-radius: 0 10px 10px 0;
    }
  }
  /* extra padding on checkbox to align with text in other columns */
  td:has(input[type="checkbox"]) {
    padding: 20px 10px;
  }
  .delete-btn {
    text-transform: uppercase;
    font-size: 0.9rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 8px;
    svg {
      min-width: 20px;
      min-height: 20px;
      fill: var(--text);
    }
    span {
      opacity: 0;
      transition: opacity 50ms ease-out;
    }
    &:hover span,
    &:focus span {
      opacity: 1;
    }
  }
}

#new-book-btn,
button[type="submit"] {
  font-family: var(--font-secondary);
  font-weight: 600;
  text-transform: lowercase;
  border-radius: 10px;
  padding: 2px 10px;
  font-size: 1.2rem;
  background-color: var(--accent);
  outline: 0 solid var(--accent);
  transition: background-color 50ms ease-out, color 50ms ease-out, outline-width 50ms ease-out;;
  &:hover,
  &:focus {
    background-color: var(--text);
    color: var(--accent);
    outline-width: 5px;
  }
}

#new-book-btn {
  width: max-content;
}

#new-book-modal {
  position: absolute;
  width: min(600px, calc(100% - 80px));
  border-radius: 10px;
  /* center on page */
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

#new-book-form {
  color: var(--text);
  border-radius: 10px;
  padding: 30px 25px;
  fieldset {
    display: grid;
    gap: 20px;
    grid-template-columns: 1fr auto;
  }
  legend {
    font-family: var(--font-secondary);
    text-transform: lowercase;
    font-size: 1.5rem;
    font-weight: 600;
    padding-bottom: 10px;
  }
  .cancel-btn {
    grid-column: 2;
    justify-self: end;
    font-family: var(--font-secondary);
    font-weight: 600;
    font-size: 30px;
  }
  ul.form-fields {
    list-style-type: none;
    grid-column: 1 / span 2;
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: 20px;
    li {
      display: contents;
    }
    label {
      font-family: var(--font-secondary);
      text-transform: lowercase;
      font-weight: 600;
      line-height: 1.2;
      &[for="book-pages"] {
        /* line break at number of / pages */
        max-width: 8ch;
      }
    }
    input[type="text"],
    input[type="number"] {
      border: 1px solid var(--text);
      border-radius: 5px;
      padding: 2px 8px;
      &:focus {
        outline: 4px solid var(--text);
      }
    }
    /* keep number input arrows flush against right side */
    input[type="number"] {
      padding-right: 0;
    }
    input[type="checkbox"]  {
      justify-self: start;
    }
  }
  button[type="submit"] {
    margin-top: 30px;
    width: 100%;
  }
}

/* animate modal */
/* open state */
dialog[open] {
  opacity: 1;
}
/* closed state */
dialog {
  opacity: 0;
  transition:
    opacity 100ms ease-out,
    overlay 100ms ease-out allow-discrete,
    display 100ms ease-out allow-discrete;
}

@starting-style {
  dialog[open] {
    opacity: 0;
  }
}
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    overlay 100ms allow-discrete,
    display 100ms allow-discrete,
    background-color 100ms;
}
dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}
@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}